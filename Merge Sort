//Merge Sort
class Main{
    public static void merge(int [] arr,int l,int mid,int r) {
        int i, j, k;
        // n1 - size of left subarray
        // n2 - size of right subarray
        int n1 = mid - l + 1;
        int n2 = r - mid;

        // create a left and right subarray
        int[] lsubarray = new int[n1];
        int[] rsubarray = new int[n2];

        // copy the elements into left and right subarray
        for (i = 0; i < n1; i++) {
            lsubarray[i] = arr[l + i];
        }

        for (j = 0; j < n2; j++) {
            rsubarray[j] = arr[mid + 1 + j];
        }

        // comparison among elements in the left and right subarray
        i = 0;
        j = 0;
        k = l;

        while (i < n1 && j < n2) {
            if (lsubarray[i] <= rsubarray[j]) {
                arr[k] = lsubarray[i];
                i = i + 1;
            } else {
                arr[k] = rsubarray[j];
                j = j + 1;
            }
            k = k + 1;
        }

        // copy the remaining elements from left subarray
        while (i < n1) {
            arr[k] = lsubarray[i];
            i = i + 1;
            k = k + 1;
        }

        // copy the remaining elements from right subarray
        while (j < n2) {
            arr[k] = rsubarray[j];
            j = j + 1;
            k = k + 1;
        }
    }
    public static void divide(int []arr,int i,int j){
        if(i<j){
            int mid=i+(j-i)/2;
            divide(arr,i,mid);
            divide(arr,mid+1,j);
            merge(arr,i,mid,j);
        }
    }
    public static void main(String[] args) {
        int [] arr = {2,3,1,4,20,19,21,18};
        int n = arr.length;
        divide(arr,0,n-1);
        for(int i:arr)
            System.out.println(i);
    }
}
